stages:
  - tests
  - dev
  - staging
  - preprod
  - prod

default:
  image: binkhq/python:3.9

# there are no tests for now
# tests:
#   stage: tests
#   variables:
#     POSTGRES_DB: vela_test
#     POSTGRES_USER: postgres
#     POSTGRES_PASSWORD: ""
#     POSTGRES_HOST_AUTH_METHOD: trust
#     LOG_FORMATTER: brief
#     SQLALCHEMY_DATABASE_URI: "postgresql+asyncpg://postgres@postgres:5432/vela"
#     TESTING: "True"
#   before_script: &setup
#     - apt-get update && apt-get -y install gcc g++
#     - pip install pipenv
#     - pipenv install --dev --system --deploy --ignore-pipfile
#     - pip freeze
#   script:
#     - alembic upgrade head
#     - pytest --verbose --cov app --cov-report term-missing
#   services:
#     - postgres:11

complexity:
  stage: tests
  script:
    - pip install xenon
    - xenon --no-assert --max-average A --max-modules B --max-absolute B .

style:
  stage: tests
  script:
    - pip install flake8 black
    - flake8 && black --line-length 120 --check .

type-check:
  stage: tests
  script:
    - pip install mypy sqlalchemy-stubs pydantic
    - mypy --config-file .mypy.ini app
# not deployed yet
# dev:
#   stage: dev
#   image: docker:latest
#   services:
#     - docker:dind
#   environment:
#     name: dev
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
#   script:
#     - export CTAG="develop-$(date +%F-%H%M%S)"
#     - docker build --pull -t "$CI_REGISTRY/vela:$CTAG" .
#     - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/vela:$CTAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
#     - docker push "$CI_REGISTRY/vela:$CTAG"
#   only:
#     - develop

# staging:
#   stage: staging
#   image: docker:latest
#   services:
#     - docker:dind
#   environment:
#     name: staging
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
#   script:
#     - docker build --pull -t "$CI_REGISTRY/vela:staging-$CI_COMMIT_TAG" .
#     - docker run --rm -v /var/run/docker.sock:/var/run/docker.sock "$CI_REGISTRY/aqua-scanner:5.0" scan --local "$CI_REGISTRY/vela:staging-$CI_COMMIT_TAG" --host https://aqua.uksouth.bink.sh:30001/ --user scanner --password $AQUA_PASSWORD --show-negligible --policies Bink --text
#     - docker push "$CI_REGISTRY/vela:staging-$CI_COMMIT_TAG"
#   only:
#     - tags

# preprod:
#   stage: preprod
#   image: binkops.azurecr.io/tagbot:latest
#   environment:
#     name: preprod
#   script:
#     - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/vela:staging-$CI_COMMIT_TAG" --tag "preprod-$CI_COMMIT_TAG"
#   when: manual
#   only:
#     - tags

# prod:
#   stage: prod
#   image: binkops.azurecr.io/tagbot:latest
#   environment:
#     name: prod
#   script:
#     - tagbot --username "$CI_REGISTRY_USER" --password "$CI_REGISTRY_PASSWORD" --source "$CI_REGISTRY/vela:staging-$CI_COMMIT_TAG" --tag "prod-$CI_COMMIT_TAG"
#   when: manual
#   only:
#     - tags
